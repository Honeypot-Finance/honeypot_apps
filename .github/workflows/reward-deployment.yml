name: Update Vercel ENV for reward-vault-market

on:
  push:
    branches:
      - main
    paths:
      - .env
      - '.github/workflows/reward-deployment.yml'
      - 'apps/reward-vault-market/**'

jobs:
  update-env:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Export secrets to env
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Convert to env format
        run: |
          sed -i 's/\r$//' .github/workflows/.env.workflow
          echo "" >> .github/workflows/.env.workflow

      - name: Load and replace .env.workflow variables
        shell: bash
        run: |
          while IFS= read -r line; do
            echo "line of: $line"
            while [[ "$line" =~ (\$\{([^}]+)\}) ]]; do
              var_name="${BASH_REMATCH[2]}"
              var_value=$(echo "${!var_name}")
              line="${line//${BASH_REMATCH[1]}/$var_value}"
            done
            echo "$line"
          done < .github/workflows/.env.workflow > .github/workflows/.env.workflow.tmp
          mv .github/workflows/.env.workflow.tmp .github/workflows/.env.workflow

      - name: Create or Update Vercel Environment Variables for Project
        env:
          ENV_FILE: .github/workflows/.env.workflow
          VERCEL_TOKEN: ${{ secrets.WORKFLOW_VERCEL_TOKEN }}
          TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
          PROJECT_NAME: reward-vault-market
          PROJECT_ID: prj_Yhv6hufFe068byTjwTCRds5PP4YB
        run: |
          # 获取项目当前的环境变量列表
          current_envs=$(curl -s -X GET "https://api.vercel.com/v10/projects/$PROJECT_ID/env?teamId=$TEAM_ID" \
                            -H "Authorization: Bearer $VERCEL_TOKEN")
          echo "current_envs: $current_envs"

          # 读取环境变量文件并逐行处理
          while IFS='=' read -r key value || [[ -n "$key" ]]; do
            if [[ ! -z "$key" && "$key" != \#* ]]; then
              # 检查环境变量是否已经存在
              var_exists=$(echo "$current_envs" | jq -r '.envs[] | select(.key == "$key") | .key')

              if [ "$var_exists" == "$key" ]; then
                # 如果环境变量已存在，获取 ID 并更新
                echo "$key already exists, updating..."
                ENV_VAR_ID=$(echo "$current_envs" | jq -r ".envs[] | select(.key == \"$key\") | .id")
                curl -X PUT "https://api.vercel.com/v10/projects/$PROJECT_ID/env/$ENV_VAR_ID?teamId=$TEAM_ID" \
                    -H "Authorization: Bearer $VERCEL_TOKEN" \
                    -H "Content-Type: application/json" \
                    --data "{
                      \"key\": \"$key\",
                      \"value\": \"$value\",
                      \"type\": \"encrypted\",
                      \"target\": [\"production\", \"preview\"]
                    }"
              else
                # 如果环境变量不存在，则创建
                echo "Setting $key in Vercel..."
                curl -X POST "https://api.vercel.com/v10/projects/$PROJECT_ID/env?teamId=$TEAM_ID" \
                    -H "Authorization: Bearer $VERCEL_TOKEN" \
                    -H "Content-Type: application/json" \
                    --data "{
                      \"key\": \"$key\",
                      \"value\": \"$value\",
                      \"type\": \"encrypted\",
                      \"target\": [\"production\", \"preview\"]
                    }"
              fi
            fi
          done < "$ENV_FILE"
