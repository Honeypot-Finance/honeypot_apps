name: Update Vercel ENV for reward-vault-market

on:
  push:
    branches:
      - main
    paths:
      - .env
      - '.github/workflows/reward-deployment.yml'
      - 'apps/reward-vault-market/**'

jobs:
  update-env:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Replace placeholders with GitHub Secrets dynamically
        run: |
          # 获取 GitHub Secrets 名称
          SECRETS=$(grep -oP '\${{ secrets\.\K[^}]+(?= }})' .github/workflows/.env.workflow | sort -u)

          # 遍历每个 secret 并进行替换
          for SECRET in $SECRETS; do
            # 从 GitHub Secrets 中获取实际值
            SECRET_VALUE="${{ secrets[$SECRET] }}"
            if [ -z "$SECRET_VALUE" ]; then
              echo "Error: Secret $SECRET is not available"
              exit 1
            fi
            # 替换 .env.workflow 文件中的占位符
            sed -i "s|\${{ secrets.$SECRET }}|$SECRET_VALUE|g" .github/workflows/.env.workflow
          done

      - name: Load environment variables from .env.workflow
        run: |
          # 加载 .env.workflow 文件中的环境变量
          set -o allexport
          source .github/workflows/.env.workflow
          set +o allexport

      - name: Display environment variables
        run: |
          echo "test_action_key=$TEST_ACTION_ENV_1"

      - name: Update Vercel Environment Variables for Project
        env:
          ENV_FILE: .github/workflows/.env.workflow
          VERCEL_TOKEN: ${{ secrets.WORKFLOW_VERCEL_TOKEN }}
          TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
          PROJECT_NAME: reward-vault-market
          PROJECT_ID: prj_Yhv6hufFe068byTjwTCRds5PP4YB

        run: |
          while IFS='=' read -r key value || [[ -n "$key" ]]; do
            if [[ ! -z "$key" && "$key" != \#* ]]; then
              echo "Setting $key in Vercel..."
              curl -X POST "https://api.vercel.com/v10/projects/$PROJECT_ID/env?teamId=$TEAM_ID" \
              -H "Authorization: Bearer $VERCEL_TOKEN" \
              -H "Content-Type: application/json" \
              --data "{
                \"key\": \"$key\",
                \"value\": \"$value\",
                \"type\": \"plain\",
                \"target\": [\"production\", \"preview\"]
              }"
            fi
          done < "$ENV_FILE"
