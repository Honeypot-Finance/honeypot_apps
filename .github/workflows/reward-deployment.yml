name: Update Vercel ENV for reward-vault-market

on:
  push:
    branches:
      - main
    paths:
      - .env
      - '.github/workflows/reward-deployment.yml'
      - 'apps/reward-vault-market/**'

jobs:
  update-env:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq and gh CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate gh CLI with PAT
        env:
          WORKFLOW_GITHUB_TOKEN: ${{ secrets.WORKFLOW_GITHUB_TOKEN }} # 使用 Personal Access Token (PAT)
        run: |
          # 使用 PAT 登录 gh CLI
          echo "$WORKFLOW_GITHUB_TOKEN" | gh auth login --with-token

      - name: Convert to Unix format
        run: sed -i 's/\r$//' .github/workflows/.env.workflow

      - name: Replace placeholders in .env.workflow dynamically
        run: |
          echo "==== Before Replacement ===="
          cat .github/workflows/.env.workflow

          while IFS= read -r line; do
            if [[ "$line" =~ \${([A-Za-z0-9_]+)} ]]; then
              secret_name="${BASH_REMATCH[1]}"
              secret_value="${{ secrets[secret_name] }}"  # 获取 GitHub Secret 值

              if [[ -z "$secret_value" ]]; then
                echo "Warning: Secret '$secret_name' not found!"
              else
                echo "Replacing $secret_name in .env.workflow"
                sed -i "s|\${$secret_name}|$secret_value|g" .github/workflows/.env.workflow
              fi
            fi
          done < .github/workflows/.env.workflow

          echo "==== After Replacement ===="
          cat .github/workflows/.env.workflow

      - name: Print .env.workflow file
        run: |
          echo "===== Start of .env.workflow ====="
          cat .github/workflows/.env.workflow
          echo "===== End of .env.workflow ====="

      - name: Update Vercel Environment Variables for Project
        env:
          ENV_FILE: .github/workflows/.env.workflow
          VERCEL_TOKEN: ${{ secrets.WORKFLOW_VERCEL_TOKEN }}
          TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
          PROJECT_NAME: reward-vault-market
          PROJECT_ID: prj_Yhv6hufFe068byTjwTCRds5PP4YB
        run: |
          while IFS='=' read -r key value || [[ -n "$key" ]]; do
            if [[ ! -z "$key" && "$key" != \#* ]]; then
              echo "Setting $key in Vercel..."
              curl -X POST "https://api.vercel.com/v10/projects/$PROJECT_ID/env?teamId=$TEAM_ID" \
              -H "Authorization: Bearer $VERCEL_TOKEN" \
              -H "Content-Type: application/json" \
              --data "{
                \"key\": \"$key\",
                \"value\": \"$value\",
                \"type\": \"plain\",
                \"target\": [\"production\", \"preview\"]
              }"
            fi
          done < "$ENV_FILE"
