name: Update Vercel ENV for pop2pump

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/.env.pop2pump'
      - '.github/workflows/pop2pump.deployment.yml'
      - 'apps/pop2pump/**'

jobs:
  update-env:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Export secrets to env
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Convert to env format
        run: |
          sed -i 's/\r$//' .github/workflows/.env.pop2pump
          echo "" >> .github/workflows/.env.pop2pump

      - name: Load and replace .env.pop2pump variables
        shell: bash
        run: |
          while IFS= read -r line; do
            echo "line of: $line"
            while [[ "$line" =~ (\$\{([^}]+)\}) ]]; do
              var_name="${BASH_REMATCH[2]}"
              var_value=$(echo "${!var_name}")
              line="${line//${BASH_REMATCH[1]}/$var_value}"
            done
            echo "$line"
          done < .github/workflows/.env.pop2pump > .github/workflows/.env.pop2pump.tmp
          mv .github/workflows/.env.pop2pump.tmp .github/workflows/.env.pop2pump

      - name: Create or Update Vercel Environment Variables for Project
        env:
          ENV_FILE: .github/workflows/.env.pop2pump
          VERCEL_TOKEN: ${{ secrets.WORKFLOW_VERCEL_TOKEN }}
          TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
          PROJECT_NAME: reward-vault-market
          PROJECT_ID: prj_Yhv6hufFe068byTjwTCRds5PP4YB
        run: |
          # 获取项目当前的环境变量列表
          current_envs=$(curl -s -X GET "https://api.vercel.com/v10/projects/$PROJECT_ID/env?teamId=$TEAM_ID" \
                            -H "Authorization: Bearer $VERCEL_TOKEN")
          echo "current_envs: $current_envs"

          # 读取环境变量文件并逐行处理
          while IFS='=' read -r key value || [[ -n "$key" ]]; do
           # 跳过空行或仅包含空格的行
            if [[ -z "$key" || "$key" =~ ^[[:space:]]*$ ]]; then
              continue
            fi
            echo "key: $key"
            value=$(echo "$value" | xargs)
            echo "value: $value"
            if [[ ! -z "$key" && "$key" != \#* ]]; then
              # 检查环境变量是否已经存在
              var_exists=$(echo "$current_envs" | jq -r ".envs[] | select(.key == \"$key\") | .key")
              echo "var_exists: $var_exists"
              echo "key: $key"
              if [ "$var_exists" == "$key" ]; then
                # 如果环境变量已存在，获取 ID 并更新
                echo "$key already exists, updating..."
                ENV_VAR_ID=$(echo "$current_envs" | jq -r ".envs[] | select(.key == \"$key\") | .id")
                curl -X PATCH "https://api.vercel.com/v10/projects/$PROJECT_ID/env/$ENV_VAR_ID?teamId=$TEAM_ID" \
                    -H "Authorization: Bearer $VERCEL_TOKEN" \
                    -H "Content-Type: application/json" \
                    --data "{
                      \"key\": \"$key\",
                      \"value\": \"$value\",
                      \"type\": \"encrypted\",
                      \"target\": [\"production\", \"preview\"]
                    }"
              else
                # 如果环境变量不存在，则创建
                echo "Setting $key in Vercel..."
                curl -X POST "https://api.vercel.com/v10/projects/$PROJECT_ID/env?teamId=$TEAM_ID" \
                    -H "Authorization: Bearer $VERCEL_TOKEN" \
                    -H "Content-Type: application/json" \
                    --data "{
                      \"key\": \"$key\",
                      \"value\": \"$value\",
                      \"type\": \"encrypted\",
                      \"target\": [\"production\", \"preview\"]
                    }"
              fi
            fi
          done < "$ENV_FILE"

      - name: Print .env.pop2pump file
        run: |
          echo "===== Start of .env.pop2pump ====="
          cat  .github/workflows/.env.pop2pump
          echo "===== End of .env.pop2pump ====="
